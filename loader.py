# –∏–º–ø–æ—Ä—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞, –±–æ—Ç–∞, —Ç–∏–ø–æ–≤


from aiogram.dispatcher import Dispatcher
from aiogram import Bot
# –∏–º–ø–æ—Ä—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–π
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.utils import executor

# –∏–º–ø–æ—Ä—Ç —Ç–æ–∫–µ–Ω–∞
# from config import config
from config import bot_token  # Token
from coordinates import CoordinatesR, CoordinatesP, CoordinatesN
from get_weather import get_weather
from scheduller_jobs import SchedullerJobs

# !!! –Ω–µ –≤–∑–ª–µ—Ç–∞–µ—Ç !!! —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏ –ø–µ—Ä–µ–¥–∞–µ–º –≤ –Ω–µ–≥–æ –¢–æ–∫–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ .env –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ
# bot = Bot(token=config.bot_token.get_secret_value())

bot = Bot(token=bot_token)
# bot = Bot(token=Token)

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤ dp –¥–ª—è FSM
storage = MemoryStorage()

# –≤ aiogram —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä. –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∏ –ø–µ—Ä–µ–¥–∞–µ–º –≤ –Ω–µ–≥–æ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
db = Dispatcher(bot, storage=storage)


# –ø–æ–≥–æ–¥–∞
# -------------------------------------------
def weather_r():
    """Returns a message about the temperature and weather description"""
    wthr = get_weather(coordinates=CoordinatesR)
    return f'{wthr.location}, {wthr.description}\n' \
           f'Temp: {wthr.temperature}¬∞C, feels like: {wthr.temperature_feeling}¬∞C'

def wind_r():
    """Returns a message about the wind"""
    wthr = get_weather(coordinates=CoordinatesR)
    return f'Wind: {wthr.wind_direction},{wthr.wind_speed} m/s'

def weather_n():
    """Returns a message about the temperature and weather description"""
    wthr = get_weather(coordinates=CoordinatesN)
    return f'{wthr.location}, {wthr.description}\n' \
           f'Temp: {wthr.temperature}¬∞C, feels like: {wthr.temperature_feeling}¬∞C'

def wind_n():
    """Returns a message about the wind"""
    wthr = get_weather(coordinates=CoordinatesN)
    return f'Wind: {wthr.wind_direction},{wthr.wind_speed} m/s'

def weather_p():
    """Returns a message about the temperature and weather description"""
    wthr = get_weather(coordinates=CoordinatesP)
    return f'{wthr.location}(–ü–∏—Ç–µ—Ä –ø–æ–π–º–µ—Ç üòâ), {wthr.description}\n' \
           f'Temp: {wthr.temperature}¬∞C, feels like: {wthr.temperature_feeling}¬∞C'


def wind_p():
    """Returns a message about the wind"""
    wthr = get_weather(coordinates=CoordinatesP)
    return f'Wind: {wthr.wind_direction},{wthr.wind_speed} m/s'

str_weather = f'{weather_r()}\n{wind_r()}\n\n{weather_n()}\n{wind_n()}\n\n{weather_p()}\n{wind_p()}'

# ----------------------------------------------


myScheduler = SchedullerJobs(str_weather)


# –∏–Ω–∏—Ü–∏–∏—Ä—É–µ–º –∑–∞–¥–∞–Ω–∏—è –ø–æ —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏—é
async def on_startup(db):
    myScheduler.schedule_jobs(db)


# ---------------------------------------------------
def start_bot():
    # —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏ –ø–µ—Ä–µ–¥–∞–µ–º –≤ –Ω–µ–≥–æ –¢–æ–∫–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ config.py
    # bot = Bot(token=bot_token)
    # –≤ aiogram —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä. –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∏ –ø–µ—Ä–µ–¥–∞–µ–º –≤ –Ω–µ–≥–æ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    # db = Dispatcher(bot, storage=MemoryStorage())
    # –∑–∞–ø—É—Å–∫–∞–µ–º scheduler

    # str_weather = weather()
    myScheduler.scheduler.start()
    # –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞: –≤—ã–∑—ã–≤–∞–µ–º —É executor –º–µ—Ç–æ–¥ start_polling, –ø–µ—Ä–µ–¥–∞–µ–º –≤ –Ω–µ–≥–æ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä, –∏ –¥–æ–ø —É—Å–ª–æ–≤–∏–µ
    executor.start_polling(db, on_startup=on_startup)
