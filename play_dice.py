from aiogram import types
from aiogram.utils.exceptions import CantInitiateConversation

# –∏–º–ø–æ—Ä—Ç —Ñ-–∏–π –±–¥
from dbfunctions import update_player_assets_plays_by_id_up, insert_player_full
from dbfunctions import select_player_assets_by_id
from dbfunctions import select_player_assets_plays_by_id
from dbfunctions import update_player_assets_plays_by_id_down

from dbclass import DataBase

# –∏–º–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞ —Å—á–µ—Ç—á–∏–∫
from classesnew import IncrementCounter
# –∏–º–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–π
from classesnew import UserState

# –∏–º–ø–æ—Ä—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–π
from aiogram.dispatcher import FSMContext

# –∏–º–º–ø–æ—Ä—Ç –∑–∞–¥–µ—Ä–∂–∫–∏
import asyncio




# –∏–º–ø–æ—Ä—Ç –≥–æ—Ç–æ–≤—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
# from bot_commands import BotCommands

class PlayDice:
    def __init__(self, db, bot):
        self.db = db
        self.bot = bot
        self.database = DataBase()
        # self.gift_sum = 100

    def nvl(self, a, b):
        if a is None:
            return b
        else:
            return a

    def playdice(self):
        # —Ä–∞–±–æ—Ç–∞–µ–º —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ - –∏–≥—Ä–∞ –∫—É–±–∏–∫
        @self.db.message_handler(commands=["play"])
        async def user_register(message: types.Message):
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –≤ –ª–∏—á–∫—É —Å –ë–û–¢–æ–º", url="https://t.me/Just_The_Test_Bot"))
            keyboard.add()

            # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏—á–Ω—ã–π —á–∞—Ç –∏–ª–∏ –Ω–µ—Ç
            if message.from_user.id == message.chat.id:
                # await self.bot.send_message(message.from_user.id, "@" + str(message.from_user.username) + ", –ü—Ä–∏–≤–µ—Ç!")
                # await message.answer(message.from_user.id, "@" + str(message.from_user.username) + ", –ü—Ä–∏–≤–µ—Ç!")
                await message.answer(
                    "@" + str(self.nvl(message.from_user.username, "User")) + " –í–∞–º –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 10 –ª–µ—Ç?\n"
                                                                               "–í—ã –≤ —Ç—Ä–µ–∑–≤–æ–º —É–º–µ –∏ –∑–¥—Ä–∞–≤–æ–º —Ä–∞—Å—Å—É–¥–∫–µ?\n"
                                                                               "–°–≥—É—â–µ–Ω–∫—É –ª—é–±–∏—Ç–µ?\n\n"
                                                                               "–ù–∞–ø–∏—à–∏—Ç–µ: –î–∞ –∏–ª–∏ –ù–µ—Ç!")
                await UserState.user_id.set()
            else:
                try:
                    await self.bot.send_message(message.from_user.id, "@" + str(self.nvl(message.from_user.username, "User")) +
                                           " –ò–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ —Å –ë–û–¢–æ–º.\n"
                                           "–ù–∞–±–µ—Ä–∏ —Å–∞–º –∏–ª–∏ –∂–º–∏ —Ç—É—Ç:\n"
                                           "/play")
                except CantInitiateConversation:
                    await self.bot.send_message(message.chat.id, "@" + str(self.nvl(message.from_user.username, "User")) +
                                           " –ú—ã –µ—â–µ –Ω–µ –∑–Ω–∞–∫–æ–º—ã! üòé\n"
                                           "–°–ø–µ—Ä–≤–∞ –Ω–∞–¥–æ –ø–æ–≥–≤–æ—Ä–∏—Ç—å –Ω–∞–µ–¥–∏–Ω–µ. üòç\n"
                                           "–ö–æ–≥–¥–∞ –ø–µ—Ä–µ–π–¥–µ—à—å –Ω–∞–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É: /start", reply_markup=keyboard)

        cnt3 = IncrementCounter()

        @self.db.message_handler(state=UserState.user_id)
        async def get_username(message: types.Message, state: FSMContext):
            string = message.text.lower()
            gift_sum = 100
            if string not in ("–¥–∞", "lf", "ok") or len(string) != 2:
                cnter3 = cnt3.new_value()
                if cnter3 < 1:
                    await message.answer(
                        "@" + str(self.nvl(message.from_user.username, "User")) + " –í—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ [–î–∞]! –ü–æ–¥—É–º–∞–π—Ç–µ...!\n" + " –ü–æ–ø—ã—Ç–∫–∞: " + str(
                            cnter3) + " –∏–∑ 2")
                    await UserState.user_id.set()
                else:
                    await message.answer("@" + str(self.nvl(message.from_user.username, "User")) + " –ü—Ä–µ–∫—Ä–∞—Ç–∏–ª–∏ –∏–≥—Ä—É.\n"
                                                                                 "–î–æ —Å–∫–æ—Ä–æ–≥–æ —Å–≤–∏–¥–∞–Ω–∏—è!.")
                    await state.finish()
            else:
                await state.update_data(user_id=message.from_user.id)
                await state.update_data(user_name="@" + str(self.nvl(message.from_user.username, "User")))

                # –ø–æ–ª—É—á–∏–º –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                data = await state.get_data()
                user_name = data['user_name']
                user_id = data['user_id']

                # –¥–æ–±–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î –∏ –µ–º—É 100 –ë–æ—Ç–ö–æ–≤
                # entities = (user_id, user_name, gift_sum, 0, 0)
                entities = (user_id, user_name, gift_sum, 0, 0, 0, 0, 0, 0, "", "")

                # user_state = insert_player_short(entities)
                user_state = insert_player_full(entities)
                # –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω, —Ç–æ —ç—Ç–æ –Ω–æ–≤—ã–π –∏–Ω–∞—á–µ - —Å—Ä–∞–≤–±–æ—Ç–∞–µ—Ç –µ–∫—Å–µ–ø—à–Ω –≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ -  —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π !!! –ø–æ–∫–∞ —Ç–∞–∫, –ø–æ—Ç–æ–º –ø–µ—Ä–µ–¥–∞–ª–∞—Ç—å –∫—Ä–∞—Å–∏–≤–æ
                if user_state:
                    await message.answer("@" + str(self.nvl(message.from_user.username, "User")) + " –û—Ç–ª–∏—á–Ω–æ!\n"
                                                                                 "–í—ã –Ω–æ–≤—ã–π –∏–≥—Ä–æ–∫.\n"
                                                                                 "–î–∞—Ä–∏–º –í–∞–º " + str(
                        gift_sum) + " –ë–æ—Ç–ö–æ–∏–Ω–æ–≤!\n"
                                    "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –í–∞—à—É —Å—Ç–∞–≤–∫—É –≤ –ë–æ—Ç–ö–æ–∏–Ω–∞—Ö!")
                    await UserState.next()
                else:
                    # –ø–æ–ª—É—á–∏–º —Å–∫–æ–∫–∞ –¥–µ–Ω–µ–≥ –∏ –∏–≥—Ä —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    # assets_user = select_player_assets_by_id(user_id)
                    data_db = select_player_assets_plays_by_id(user_id)
                    assets_user = data_db['assets']
                    plays_user = data_db['plays']
                    # print(str(plays_user))
                    wins_user = data_db['wins']
                    win_assets = data_db['win_assets']
                    loss_assets = data_db['loss_assets']
                    if str(assets_user) == "0":
                        await message.answer("@" + str(self.nvl(message.from_user.username, "User")) + " –ò–∑–≤–∏–Ω–∏—Ç–µ...\n"
                                                                                     "–£ –í–∞—Å " + str(
                            assets_user) + " –ë–æ—Ç–ö–æ–∏–Ω–æ–≤!\n"
                                             # "–í—Å–µ–≥–æ –∏–≥—Ä: " + str(plays_user) + "\n"
                                             # "–ò–∑ –Ω–∏—Ö –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö: " + str(wins_user) + "\n"
                                           "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫–∏. –í–∞–º –Ω—É–∂–Ω—ã –ë–æ—Ç–ö–æ–∏–Ω—ã.\n"
                                           "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É üòé")
                        await state.finish()

                    else:
                        await message.answer("@" + str(self.nvl(message.from_user.username, "User")) + " –û—Ç–ª–∏—á–Ω–æ!\n"
                                                                                     "–£ –í–∞—Å " + str(
                            assets_user) + " –ë–æ—Ç–ö–æ–∏–Ω–æ–≤!\n"
                                           "–í—Å–µ–≥–æ –∏–≥—Ä " + str(plays_user) + " \n"
                                                                            "–ò–∑ –Ω–∏—Ö –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö " + str(wins_user) + "\n"
                                                                                                                    "–í—Å–µ–≥–æ –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö –ë–æ—Ç–ö–æ–∏–Ω–æ–≤: " + str(
                            win_assets) + " \n"
                                          "–í—Å–µ–≥–æ –ø—Ä–æ–∏–≥—Ä–∞–Ω–Ω—ã—Ö –ë–æ—Ç–ö–æ–∏–Ω–æ–≤: " + str(loss_assets) + " \n\n"
                                                                                               "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –í–∞—à—É —Å—Ç–∞–≤–∫—É –≤ –ë–æ—Ç–ö–æ–∏–Ω–∞—Ö!")
                        await UserState.next()  # –ª–∏–±–æ –∂–µ UserState.assets.set()

        cnt = IncrementCounter()
        cnt2 = IncrementCounter()

        # –ù–ê–î–û –ü–†–û–î–ï–ë–ê–ñ–ò–¢–¨ !!!
        @self.db.message_handler(state=UserState.assets)
        async def get_address(message: types.Message, state: FSMContext):
            string = message.text
            data = await state.get_data()
            user_id = data['user_id']
            if string.isdigit():
                # —É–∑–Ω–∞–µ–º —Å–∫–æ–∫–∞ –¥–µ–Ω–µ–≥ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                data = select_player_assets_plays_by_id(user_id)
                assets_user = data['assets']
                if int(string) > int(assets_user):
                    await message.answer("@" + str(self.nvl(message.from_user.username, "User")) + " –ù–µ –ø—Ä–∏–Ω—è—Ç–æ!\n"
                                                                                 "–í—ã –≤–≤–µ–ª–∏ –±–æ–ª—å—à–µ —á–µ–º —É –≤–∞—Å –µ—Å—Ç—å!\n"
                                                                                 "–ò–∑–º–µ–Ω–∏—Ç–∏ —Å—Ç–∞–≤–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")
                    await UserState.assets.set()
                else:
                    await state.update_data(assets=message.text)
                    await message.answer("@" + str(self.nvl(message.from_user.username, "User")) + " –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ!\n"
                                                                                 "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Å—Ç–∞–≤–∏—Ç–µ!")
                    await UserState.next()  # –ª–∏–±–æ –∂–µ UserState.bet.set()
            else:
                # cnt=0
                # cnt += 1
                cnter = cnt.new_value()
                if cnter < 4:
                    await message.answer("@" + str(self.nvl(message.from_user.username, "User")) + " –ù–µ –ø—Ä–∏–Ω—è—Ç–æ!\n"
                                                                                 "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ! –ò—Å–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.\n"
                                                                                 "–ü–æ–ø—ã—Ç–∫–∞: " + str(cnter) + " –∏–∑ 3")
                    # cnt += 1
                    await UserState.assets.set()
                else:
                    await message.answer("@" + str(self.nvl(message.from_user.username, "User")) + " –ü—Ä–µ–∫—Ä–∞—Ç–∏–ª–∏ –∏–≥—Ä—É!\n"
                                                                                 "–í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –ø–æ–≤–µ–∑–µ—Ç!.")
                    await state.finish()

        @self.db.message_handler(state=UserState.bet)
        async def get_address(message: types.Message, state: FSMContext):
            string = message.text
            true_numbers = ['1', '2', '3', '4', '5', '6']
            if string.isdigit() and string in true_numbers:
                await state.update_data(bet=message.text)
                # –∑–∞–ª–æ—á–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                # await self.bot.restrict_chat_member(message.chat.id, message.from_user.id,types.ChatPermissions(can_send_messages=False))
                # await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—É—á–µ–Ω.")
                await message.answer("–°—Ç–∞–≤–∫–∞ —Å–¥–µ–ª–∞–Ω–∞! –°—Ç–∞–≤–æ–∫ –±–æ–ª—å—à–µ –Ω–µ—Ç!")
                data = await state.get_data()
                await message.answer(f"–ò–º—è: {data['user_name']}\n"
                                     f"–°—Ç–∞–≤–∫–∞: {data['assets']} –ë–æ—Ç–ö–æ–∏–Ω–æ–≤\n"
                                     f"–ù–∞ —á–∏—Å–ª–æ: {data['bet']}"
                                     )
                bet = data['bet']
                assets = data['assets']
                # user_name = data['user_name']
                user_id = data['user_id']
                msg = await message.answer_dice(emoji="üé≤")
                await asyncio.sleep(5)
                don = msg.dice.value
                await message.answer("@" + str(self.nvl(message.from_user.username, "User")) + "\n–í—ã–ø–∞–ª–æ: " + str(don) + "\n"
                                                                                                       "–°—Ç–∞–≤–∏–ª–∏ –Ω–∞: " + str(
                    bet))
                if str(bet) == str(don):
                    # print("1")

                    update_player_assets_plays_by_id_up(user_id, int(assets))
                    # print("2")
                    # –ø–æ–ª—É—á–∏–º –ë–æ—Ç–ö–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    assets_user = select_player_assets_by_id(user_id)
                    await message.answer("@" + str(self.nvl(message.from_user.username, "User")) + ' –í—ã–∏–≥—Ä–∞–ª–∏! üòÅ\n'
                                                                                 '–í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª: ' + str(
                        assets) + ' –≤ –ë–æ—Ç–ö–æ–∏–Ω–∞—Ö !\n'
                                  '–£ –í–∞—Å —Ç–µ–ø–µ—Ä—å –≤—Å–µ–≥–æ ' + str(assets_user) + ' –ë–æ—Ç–ö–æ–∏–Ω–æ–≤!')
                else:
                    # data_db = self.database.select_player_assets_plays_by_id(user_id)
                    # assets_user = int(data_db['assets']) - int(assets)
                    # plays_user = int(data_db['plays'])+1
                    # print(str(plays_user))
                    # wins_user = data_db['wins']
                    # win_assets = data_db['win_assets']
                    # loss_assets = int(data_db['loss_assets'])+int(assets)
                    # self.database.update_player_assets_plays_by_id_down(user_id, assets_user, plays_user, loss_assets)
                    update_player_assets_plays_by_id_down(user_id, int(assets))
                    # –ø–æ–ª—É—á–∏–º –ë–æ—Ç–ö–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    assets_user = select_player_assets_by_id(user_id)
                    await message.answer("@" + str(self.nvl(message.from_user.username, "User")) + ' –ü—Ä–æ–∏–≥—Ä–∞–ª–∏ ü•∫\n'
                                                                                 '–£ –í–∞—Å —Ç–µ–ø–µ—Ä—å –≤—Å–µ–≥–æ ' + str(
                        assets_user) + ' –ë–æ—Ç–ö–æ–∏–Ω–æ–≤')
                # –æ—Ç–ø—É—Å—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                # await self.bot.restrict_chat_member(message.chat.id, message.from_user.id, types.ChatPermissions(can_send_messages=True))
                # await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å!")
                # await state.finish()
                await message.answer("@" + str(self.nvl(message.from_user.username, "User")) + " –ù–∞–ø–∏—à–∏—Ç–µ:\n"
                                                                             "–î–∞ - —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å!\n"
                                                                             "–ù–µ—Ç - —á—Ç–æ–±—ã –≤—ã–π—Ç–∏")
                await UserState.user_id.set()
                # await asyncio.sleep(5)
                # await state.finish()
            else:
                cnter2 = cnt2.new_value()
                if cnter2 < 4:
                    await message.answer(
                        "@" + str(self.nvl(message.from_user.username, "User")) + " –ù–µ –ø—Ä–∏–Ω—è—Ç–æ!\n"
                                                                "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ, –∏–ª–∏ —á–∏—Å–ª–æ –Ω–µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 1-6! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.\n"
                                                                "–ü–æ–ø—ã—Ç–∫–∞: " + str(
                            cnter2) + " –∏–∑ 3")
                    # cnt += 1
                    await UserState.bet.set()
                else:
                    await message.answer(
                        "@" + str(self.nvl(message.from_user.username, "User")) + " –ü—Ä–µ–∫—Ä–∞—Ç–∏–ª–∏ –∏–≥—Ä—É. –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –ø–æ–≤–µ–∑–µ—Ç!")
                    await state.finish()
